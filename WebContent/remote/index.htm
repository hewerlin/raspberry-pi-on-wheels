<!DOCTYPE html>
<html>
<head>
<title>PiBot Remote Control</title>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, user-scalable=no" />
<script>
var isDown = false;

const WHEEL_SERVICE = getWheelService();

function getWheelService() {
	const standalone = false;
	if(standalone) {
		var key = "pibot-wheels";
		var url = localStorage.getItem(key) || "https://.../wheels";
		url = window.prompt("Enter the wheel control base URL", url) || url;
		localStorage.setItem(key, url);
		return url;
	} else {
		return "../wheels";
	}
}

function mousedown(event) {
	isDown = true;
	mousemove(event);
	event.preventDefault();
}

function mousemove(event) {
	if(isDown) {	
		go(getSpeedFromMouseEvent(event));
	}
	event.preventDefault();
}

function mouseup(event) {
	isDown = false;
	go({left:0, right:0});
	event.preventDefault();
}

function getSpeedFromMouseEvent(event) {
	return getSpeedFromPos(event.clientX, event.clientY);
}

function touchstart(event) {
	touchmove(event);
	event.preventDefault();
}

function touchmove(event) {
	go(getSpeedFromTouchEvent(event));
	event.preventDefault();
}

function touchend(event) {
	go({left:0, right:0});
	event.preventDefault();
}

function getSpeedFromTouchEvent(event) {
	return getSpeedFromPos(event.touches[0].clientX, event.touches[0].clientY);
}

function getSpeedFromPos(x, y) {
	var ec = document.getElementById("eventCatcher");
	var right = Math.round((0.5 -(x / ec.offsetWidth)) * 800 * 2);
	var left = Math.round((0.5 -(y / ec.offsetHeight)) * 800 * 2);
	return {right:right, left:left};
}

function go(speed) {
	showSpeed(speed);
	var command = "clear+left+"+speed.left+"+right+"+speed.right;
	var url = WHEEL_SERVICE+"?x="+command+"&t="+new Date().getTime();
	scheduleFetch(url);
}

var fetching = false;
var nextFetchUrl = null;
function scheduleFetch(url) {
	if(fetching) {
		nextFetchUrl = url;
	} else {
		fetching = true;
		fetch(url).then(fetchReady, fetchReady);
	}
}

function fetchReady() {
	fetching = false;
	if(nextFetchUrl != null) {
		var url = nextFetchUrl;
		nextFetchUrl = null;
		scheduleFetch(url);
	}
}

function showSpeed(speed) {
	var leftStr = (speed.left>0 ? "+": "") + speed.left;
	var rightStr = (speed.right>0 ? "+": "") + speed.right;

	while(leftStr.length < rightStr.length) {
		leftStr = " "+leftStr;
	}
	while(rightStr.length < leftStr.length) {
		rightStr = leftStr+" ";
	}
	var str = (leftStr+" | "+rightStr).split(" ").join("&nbsp;");
	document.getElementById("info").innerHTML = str;
}

function keydown(event) {
	var speeds = {
		37: {left:-100, right: 100},
		38: {left:200, right: 200},
		39: {left:100, right: -100},
		40: {left:-150, right: -150}
	};

	var speed = speeds[event.keyCode];
	if(speed) {
		go(speed);
	}
}

function keyup(event) {
	go({left:0, right:0});
}
</script>
<style>
body {
	margin: 0;
	font-family: monospace;
	font-size: 16pt;
	font-weight: bold;
}

@media (min-width: 1000px) {
	body {
		font-size: 32pt;
	}
}

#LtoR, #TtoB, #eventCatcher {
	position: absolute;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
}

#LtoR {
	background: linear-gradient(to right, #00f, #ddd, #ff0);
}

#TtoB {
	background: linear-gradient(to bottom, #0ff, #ddd, #f00);
	opacity: 0.5;
}

#info {
	position: absolute;
	left: 0;
	right: 0;
	top: 50%;
	margin-top: -0.5em;
	text-align: center;
}

.corner {
	position: absolute;
	padding: 5px;
}
</style>
</head>
<body onkeydown="keydown(event)" onkeyup="keyup(event)">
	<div id="LtoR"></div>
	<div id="TtoB"></div>

	<div id="info">0 | 0</div>

	<div class="corner" style="left:0; top:0">Ahead</div>
	<div class="corner" style="right:0; bottom:0">Backwards</div>
	<div class="corner" style="right:0; top:0">Right</div>
	<div class="corner" style="left:0; bottom:0">Left</div>

	<div id="eventCatcher"
		onmousedown="mousedown(event)" onmousemove="mousemove(event)" onmouseup="mouseup(event)"
		ontouchstart="touchstart(event)" ontouchmove="touchmove(event)" ontouchend="touchend(event)"
		></div>
</body>
</html>